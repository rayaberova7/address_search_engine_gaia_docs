## Outils utilis√©s

- Projet [**techniquement complexe**]{.orange} pour diverses raisons : 
    - Donn√©es [**non traditionnelles**]{.blue2}
    - [**Volum√©trie**]{.blue2} des donn√©es 
    - Besoins [**ressources computationnelles**]{.blue2} √©lev√©es
    - [**Reproductibilit√©**]{.blue2} n√©c√©ssaire

- N√©cessit√© d'utiliser des [**technologies sp√©cifiques**]{.orange}, pas forc√©ment dans le *toolkit* standard du statisticien
- Plateforme [SSPCloud](https://datalab.sspcloud.fr/) centrale pour la r√©alisation d'un tel projet
- Projet construit en [**6 √©tapes s√©quentielles**]{.blue2}

## Cha√Æne de traitement

![](img/pipeline_donnees_sat.png){#fig-chain2 width=100% height=100%}

## Etape 1 : Acquisition des images satellitaires

- R√©cup√©ration [**artisanale**]{.orange} des images Pl√©iades :
    - Demandes r√©alis√©es par [**mail**]{.blue2} √† l'IGN, √©changes via [**FTP**]{.blue2}
    - Groupe *DMRG* cr√©√© sur [Dinamis](https://dinamis.data-terra.org/), mais non utilis√©

- Images de Guyane via ST973
- Datation des images [**peu pr√©cise**]{.orange} et [**non standardis√©e**]{.orange}
- [**Stockage**]{.orange} des images orthos 8bits sur le [SSPCloud](https://datalab.sspcloud.fr/)

## Etape 2 : Nettoyage et annotation des images

- Pipeline [**Python**]{.orange} <img height="25" width="25" src="https://cdn.simpleicons.org/python/00000" /> pour formatter les images brutes :
    - [**S√©lection**]{.blue2} des images pour une zone d'int√©r√™t
    - [**Suppression**]{.blue2} des images ennuag√©es
    - [**D√©coupage**]{.blue2} des images $125m \times 125m$

- Pipeline de [**labellisation**]{.orange} des images satellites avec la BDTOPO

- Automatisation avec [**Argo Workflow**]{.orange}

## Etape 3 : Mod√©lisation et entra√Ænement

- Entra√Ænement avec le package [**Pytorch**]{.orange} 

- Suivi et comparaison des mod√®les avec [[**MLFlow**]{.orange}](https://projet-slums-detection-128833.user.lab.sspcloud.fr/#/experiments/10?searchFilter=&orderByKey=attributes.start_time&orderByAsc=false&startTime=ALL&lifecycleFilter=Active&modelVersionFilter=All%20Runs&selectedColumns=attributes.%60Source%60,attributes.%60Models%60,params.%60module_name%60&isComparingRuns=false&compareRunCharts=dW5kZWZpbmVk){preview-link="true"}

- Utilisation [**GPU**]{.orange} indispensable (10h d'entra√Ænement sur le SSP Cloud)

- Automatisation avec [**Argo Workflow**]{.orange}

## Etape 4 : Inf√©rence du mod√®le

- Utilisation de MLFlow pour l'[entrep√¥t de mod√®le](https://projet-slums-detection-128833.user.lab.sspcloud.fr/#/models/test){preview-link="true"}

- D√©ploiement d'une [**API**]{.orange} pour r√©aliser l'inf√©rence pour : 
    - une [**image**]{.blue2} donn√©e
    - un [**√Ælot**]{.blue2} donn√©
    - un [**contour g√©ographique**]{.blue2} donn√©

- D√©ploiement continu de l'API avec [**ArgoCD**]{.orange}

- R√©alisation de l'inf√©rence sur l'ensemble des images en parall√®le avec [**Argo Workflow**]{.orange}

## Etape 5 : Mise √† disposition des r√©sultats 

- D√©ploiement d'un [**Geoserver**]{.orange} pour mettre √† disposition les fichiers g√©ographiques (images et pr√©dictions) 

- D√©veloppement d'une application [**React**]{.orange} pour visualiser les r√©sultats
    - [CRATT](https://cratt.kub.sspcloud.fr/){preview-link="true"}

## Etape 6 : Analyses des r√©sultats selon les cas d'usages

- [**Travail statistique**]{.orange} sur les pr√©dictions :
    - D√©tection des zones √† forte cr√©ations/disparitions
    - Production de statistiques par √Ælot
    - Evaluation des r√©sultats 

- D√©pendant des cas d'usages, quelles [**priorisations**]{.orange} ?

## En r√©sum√©

- üõ†Ô∏è [**Multitude**]{.orange} d'outils √† utiliser :
    - Kubernetes, Docker, stockage MinIO, API, ArgoCD, Argo Workflow, MLFlow, React...

- ... mais dont le co√ªt d'apprentissage est rapidement [**rentabilis√©**]{.orange} :
    - Technologies [**"state of the art"**]{.orange}
    - De plus en plus utilis√©es √† l'Insee (LS3)

- ‚ö†Ô∏è [**Co√ªt de maintenance √©lev√©**]{.orange} ! Comp√©tences rares √† l'INSEE ([**ou ailleurs ?**]{.blue2})
